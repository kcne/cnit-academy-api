// Object Relational Mapper
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id               Int       @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String    @unique
  password         String
  roles            Role[]    @relation("UserRoles")
  isEmailVerified  Boolean   @default(false)
  verificationCode String?
  expiresAt        DateTime?
  Profile          Profile?
  Blog             Blog[]
  updatedAt        DateTime  @updatedAt
  totalCoins       Int       @default(0)
}

model Profile {
  id         Int          @id
  user       User         @relation(fields: [id], references: [id])
  skills     String // comma seperated list for now
  education  Education[]  @relation("ProfileEducation")
  experience Experience[] @relation("ProfileExperience")
  pfp        String       @default("/pfp/default")
}

model Education {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  organization String
  startPeriod  DateTime
  endPeriod    DateTime
  profile      Profile  @relation("ProfileEducation", fields: [profileId], references: [id])
  profileId    Int
}

model Experience {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  organization String
  startPeriod  DateTime
  endPeriod    DateTime
  profile      Profile  @relation("ProfileExperience", fields: [profileId], references: [id])
  profileId    Int
}

model Course {
  id               Int     @id @default(autoincrement())
  title            String
  description      String?
  numberOfStudents Int?
  durationInHours  Float?
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] @relation("UserRoles")
}

model Blog {
  id              Int      @id @default(autoincrement())
  title           String
  published       Boolean  @default(false)
  content         String
  blogDescription String?
  createdBy       User     @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Program {
  id                  Int      @id @default(autoincrement())
  title               String
  description         String
  founder             String
  durationInDays      Int
  appliedCount        Int      @default(0)
  studentCount        Int      @default(0)
  applicationDeadline DateTime
  CreatedAt           DateTime @default(now())
}
